import { render, screen } from '@testing-library/react';
import { NativeChat } from './ChildComponent';
import { useSingleExecution } from '../hooks/useOnce';
import { nativeUpdateFab } from '../path/to/nativeUpdateFab';

// Mock the useSingleExecution hook
jest.mock('../hooks/useOnce', () => ({
  useSingleExecution: jest.fn()
}));

// Mock the nativeUpdateFab function
const mockNativeUpdateFab = jest.fn();

// Mock the nativeUpdateFab import
jest.mock('../path/to/nativeUpdateFab', () => ({
  nativeUpdateFab: jest.fn(),
}));

describe('NativeChat Component', () => {
  beforeEach(() => {
    jest.clearAllMocks();
  });

  it('should call useSingleExecution with nativeUpdateFab', () => {
    (useSingleExecution as jest.Mock).mockReturnValue(jest.fn());
    render(<NativeChat />);
    expect(useSingleExecution).toHaveBeenCalledWith(mockNativeUpdateFab);
  });

  it('should execute the returned function from useSingleExecution', () => {
    const mockExecutor = jest.fn();
    (useSingleExecution as jest.Mock).mockReturnValue(mockExecutor);
    render(<NativeChat />);
    expect(mockExecutor).toHaveBeenCalled();
  });
}); 
